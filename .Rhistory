usethis::use_gpl3_license()
usethis
usethis::use_r("code.R")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?PredictiveStackingWeights_cpp
usethis::use_rcpp_armadillo()
usethis::use_package_doc()
devtools::load_all(".")
.Last.error
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::clean_dll()
devtools::load_all(".")
arma_dist(runif(10))
arma_dist(matrix(runif(10)))
arma_dist(matrix(runif(1)))
arma_dist(matrix(runif(2)))
devtools::load_all(".")
devtools::load_all(".")
ASMK::arma_dist(matrix(c(1,2)))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(ASMK)
library(ASMK)
devtools::clean_dll()
detach(ASMK)
remove(ASMK)
usethis::use_package("CVXR", type =  c("Imports", "Depends"))
usethis::use_package("CVXR", type =  "Imports")
library(ASMK)
withCallingHandlers(library(CVXR))
suppressPackageStartupMessages(library(CVXR))
suppressWarnings(library(CVXR))
library(ASMK)
usethis::use_package("CVXR", type =  "Depends")
Rcpp::sourceCpp("src/code.cpp")
library(ASMK)
library(ASMK)
detach("package:ASMK", unload = TRUE)
library(ASMK)
